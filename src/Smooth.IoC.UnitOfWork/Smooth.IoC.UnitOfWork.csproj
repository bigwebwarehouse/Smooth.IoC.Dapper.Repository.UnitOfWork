<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net48;netstandard2.1;net6.0;net7.0</TargetFrameworks>
		<LangVersion>latest</LangVersion>
		<ImplicitUsings>disable</ImplicitUsings>
		<Nullable>disable</Nullable>

		<Version>0.8.0</Version>
		<PackageId>Smooth.IoC.UnitOfWork</PackageId>
		<Authors>Rik Svendsen Rose (updated by James Winstanley)</Authors>
		<Company>GAIT</Company>
		<Product>Smooth.IoC.UnitOfWork</Product>
		<Summary>Smooth IoC UnitOfWork pattern.</Summary>
		<Description>
			The package  Provides a solution for the UnitOfWork patterns together with inversition of control. It is the core abstractions, interfaces and core classes that can be used for any ORM.
			On the project site there are examples of Autofact, Castle.Windsor, Ninject, Simpleinjector, StructureMap, and Unity integration. The IoC framework is not an issue... It is ment to integrate nice and smooth like...
			Utilize this package with: https://www.nuget.org/packages/Smooth.IoC.Dapper.Repository.UnitOfWork/

			The library gives you the building blocks to:
			* Create Sessions from the IDbFactory in your methods, IDbFactory should be injected into your class's. As Session extends IDbConnection and will Open on the factory spawning the session and dispose the connection on disposal of the connection.
			* Your Sessions can create UnitOfWork's. As Session extends IDbConnection and will Open on the factory spawning the session and dispose the connection on disposal of the connection.
			* Implemented for .NET Framework 4.8, .NET Standard 2.1, .NET 6.0, .NET 7.0.
		</Description>
		<Copyright>Generik0 2018</Copyright>
		<PackageLicenseUrl>http://opensource.org/licenses/MIT</PackageLicenseUrl>
		<PackageProjectUrl>https://github.com/generik0/Smooth.IoC.Dapper.Repository.UnitOfWork</PackageProjectUrl>
		<PackageIconUrl>https://raw.githubusercontent.com/Generik0/Smooth.IoC.Dapper.Repository.UnitOfWork/master/logo.jpg</PackageIconUrl>
		<RepositoryUrl>https://github.com/james-winstanley/Smooth.IoC.Dapper.Repository.UnitOfWork</RepositoryUrl>
		<PackageTags>dapper orm sql sqlite mysql mssql localdb postgresql poco unitofwork di ioc autofac castle ninject simpleinjector structuremap unity</PackageTags>
		<NeutralLanguage></NeutralLanguage>
	</PropertyGroup>

	<ItemGroup Condition=" '$(TargetFramework)' == 'net48' ">
		<Reference Include="System.Data" />
		<Reference Include="System" />
		<Reference Include="Microsoft.CSharp" />
		<PackageReference Include="System.Data.Common" Version="4.3.0" />
	</ItemGroup>

  <!--
	<ItemGroup Condition=" '$(TargetFramework)' == 'net452' ">
		<Reference Include="System.Data" />
		<Reference Include="System" />
		<Reference Include="Microsoft.CSharp" />
	</ItemGroup>

	<ItemGroup Condition=" '$(TargetFramework)' == 'net461' ">
		<Reference Include="System.Data" />
		<Reference Include="System" />
		<Reference Include="Microsoft.CSharp" />
	</ItemGroup>

	<PropertyGroup Condition=" '$(TargetFramework)' == 'net461' ">
		<DefineConstants>$(DefineConstants);NET_46_OR_GREATER</DefineConstants>
	</PropertyGroup>

	<PropertyGroup Condition=" '$(TargetFramework)' == 'netstandard1.6' ">
		<DefineConstants>$(DefineConstants);COREFX</DefineConstants>
	</PropertyGroup>

	<ItemGroup Condition=" '$(TargetFramework)' == 'netstandard1.6' ">
		<PackageReference Include="System.ComponentModel.Annotations" Version="4.3.0" />
	</ItemGroup>

	<ItemGroup Condition="'$(TargetFramework)' == 'net452'">
		<PackageReference Include="System.Data.Common" Version="4.3.0" />
	</ItemGroup>

	<ItemGroup Condition="'$(TargetFramework)' == 'net461'">
		<PackageReference Include="System.Data.Common" Version="4.3.0" />
	</ItemGroup>

	<ItemGroup Condition="'$(TargetFramework)' == 'net471'">
		<PackageReference Include="System.Data.Common" Version="4.3.0" />
	</ItemGroup>

	<ItemGroup Condition="'$(TargetFramework)' == 'netstandard1.6'">
		<PackageReference Include="System.Data.Common" Version="4.3.0" />
	</ItemGroup>

	<ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
		<PackageReference Include="System.Data.Common" Version="4.3.0" />
	</ItemGroup>

	<ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.1'">
	</ItemGroup>

	<ItemGroup Condition="'$(TargetFramework)' == 'net6.0'">
	</ItemGroup>
	-->

</Project>